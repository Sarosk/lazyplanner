<?xml version="1.0" encoding="UTF-8"?>
<!--
Copyright (C) Bilgin Ibryam http://www.ofbizian.com

This is free software: you can redistribute it and/or modify
it under the terms of the GNU Lesser General Public License as published by
the Free Software Foundation, either version 2.1 of the License, or
(at your option) any later version.

Foobar is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU Lesser General Public License for more details.

You should have received a copy of the GNU Lesser General Public License
along with this software.  If not, see http://www.fsf.org
-->

<simple-methods xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:noNamespaceSchemaLocation="http://ofbiz.apache.org/dtds/simple-methods.xsd">
    
    <simple-method method-name="findStories" short-description="Find stories">
        <session-to-field field="currentProjectId"/>
        <set field="start" from-field="parameters.start" default-value="0" type="Integer"/>
        <set field="limit" from-field="parameters.limit" default-value="25" type="Integer"/>
        <set field="start" value="${bsh: return (start +1);}" type="Integer"/> <!-- doesn't match with exths'-->
        
        <call-simple-method method-name="checkProjectIsSprint"/>
        <if-not-empty field="parameters.sprintId">
            <entity-count count-field="total" entity-name="WorkEffort">
                <condition-list>
                    <condition-expr field-name="workEffortParentId" from-field="parameters.sprintId"/>                   
                    <condition-expr field-name="projectId" from-field="currentProjectId"/>
                    <condition-expr field-name="workEffortTypeId" value="STORY"/>
                    
                    <!-- optional -->
                    <condition-expr field-name="currentStatusId" from-field="parameters.currentStatusId" ignore-if-empty="true" ignore-if-null="true"/>    
                    <condition-expr field-name="workEffortPurposeTypeId" from-field="parameters.workEffortPurposeTypeId" ignore-if-empty="true" ignore-if-null="true"/>                                       
                </condition-list>
            </entity-count>
            <entity-condition list="workEfforts" entity-name="WorkEffort">
                <condition-list>
                    <condition-expr field-name="workEffortParentId" from-field="parameters.sprintId"/>                   
                    <condition-expr field-name="projectId" from-field="currentProjectId"/>
                    <condition-expr field-name="workEffortTypeId" value="STORY"/>
                    
                    <!-- optional -->
                    <condition-expr field-name="currentStatusId" from-field="parameters.currentStatusId" ignore-if-empty="true" ignore-if-null="true"/> 
                    <condition-expr field-name="workEffortPurposeTypeId" from-field="parameters.workEffortPurposeTypeId" ignore-if-empty="true" ignore-if-null="true"/>                                                                             
                </condition-list>
                <limit-range size="${limit}" start="${start}" />
            </entity-condition>
        <else>
            <entity-count count-field="total" entity-name="WorkEffort">
                <condition-list>
                    <condition-expr field-name="projectId" from-field="currentProjectId"/>
                    <condition-expr field-name="workEffortTypeId" value="STORY"/>
                    
                    <!-- optional -->
                    <condition-expr field-name="currentStatusId" from-field="parameters.currentStatusId" ignore-if-empty="true" ignore-if-null="true"/>  
                    <condition-expr field-name="workEffortPurposeTypeId" from-field="parameters.workEffortPurposeTypeId" ignore-if-empty="true" ignore-if-null="true"/>                                                                                                
                </condition-list>
            </entity-count>        
            <entity-condition list="workEfforts" entity-name="WorkEffort">
                <condition-list>
                    <condition-expr field-name="projectId" from-field="currentProjectId"/>
                    <condition-expr field-name="workEffortTypeId" value="STORY"/>
                    
                    <!-- optional -->
                    <condition-expr field-name="currentStatusId" from-field="parameters.currentStatusId" ignore-if-empty="true" ignore-if-null="true"/>       
                    <condition-expr field-name="workEffortPurposeTypeId" from-field="parameters.workEffortPurposeTypeId" ignore-if-empty="true" ignore-if-null="true"/>                                                                                           
                </condition-list>
                <limit-range size="${limit}" start="${start}" />
            </entity-condition>
        </else>
        </if-not-empty>
       
        <call-object-method method-name="size" obj-field="workEfforts" ret-field="realTotal"/>
        <field-to-request field="total"/>        
        <log level="always" message="Found ${total} stories, returning ${realTotal}"></log>
        <field-to-request field="workEfforts"/>
    </simple-method>

    <simple-method method-name="loadTree" short-description="Loads tree data">
        <session-to-field field="currentProjectId"/>    
        <call-simple-method method-name="checkProjectIsSprint"/>
        
        <if-not-empty field="parameters.sprintId"><!-- SPRINT STORIES -->
            <entity-condition list="workEfforts" entity-name="WorkEffort">
                <condition-list>
                    <condition-expr field-name="workEffortParentId" from-field="parameters.sprintId"/>                   
                    <condition-expr field-name="projectId" from-field="currentProjectId"/>
                    <condition-expr field-name="workEffortTypeId" value="STORY"/>
                </condition-list>
                <select-field field-name="workEffortId"/>
                <select-field field-name="workEffortName"/>
                <select-field field-name="workEffortTypeId"/>            
                <select-field field-name="workEffortParentId"/>
                <select-field field-name="workEffortPurposeTypeId"/>
                <select-field field-name="currentStatusId"/>
                <order-by field-name="createdDate"/>                          
            </entity-condition>
        <else><!-- SPRINTS -->
            <entity-condition list="workEfforts" entity-name="WorkEffort">
                <condition-list>
                    <condition-expr field-name="projectId" from-field="currentProjectId"/>
                    <condition-expr field-name="workEffortTypeId" value="SPRINT"/>
                </condition-list>
                <select-field field-name="workEffortId"/>
                <select-field field-name="workEffortName"/>
                <select-field field-name="workEffortTypeId"/>  
                <order-by field-name="createdDate"/>          
            </entity-condition>
        </else>
        </if-not-empty>
         
        <call-object-method method-name="size" obj-field="workEfforts" ret-field="total"/>
        <field-to-request field="total"/>        
        <field-to-request field="workEfforts"/>
    </simple-method>

    <simple-method method-name="loadStory" short-description="Loads a story">
        <session-to-field field="currentProjectId"/>    
        <if-not-empty field="parameters.id">
            <entity-one value-field="workEffort" entity-name="WorkEffort">
                <field-map field-name="workEffortId" from-field="parameters.id"/>
            </entity-one>
            <if-compare-field operator="equals" field="currentProjectId" to-field="workEffort.projectId">
                <field-to-request field="workEffort"/>                
            </if-compare-field>
        </if-not-empty>
    </simple-method>
    
    <simple-method method-name="loadSprint" short-description="Loads a sprint">
        <session-to-field field="currentProjectId"/>    
        <if-not-empty field="parameters.id">
            <entity-one value-field="workEffort" entity-name="WorkEffort">
                <field-map field-name="workEffortId" from-field="parameters.id"/>
            </entity-one>
            <if-compare-field operator="equals" field="currentProjectId" to-field="workEffort.projectId">
                <field-to-request field="workEffort"/>                
            </if-compare-field>
        </if-not-empty>
    </simple-method>    

    <simple-method method-name="loadComments" short-description="Loads comments for story or sprint">
        <call-simple-method method-name="checkStoryBelongToProject"/>
        
        <entity-and list="notes" entity-name="WorkEffortNoteAndData">
            <field-map field-name="workEffortId" from-field="parameters.workEffortId"/>                   
        </entity-and>
        <call-object-method method-name="size" obj-field="notes" ret-field="total"/>
        <field-to-request field="total"/>        
        <field-to-request field="notes"/>
    </simple-method>
  
    <simple-method method-name="createComment" short-description="Create story or sprint comment">
        <call-simple-method method-name="checkStoryBelongToProject"/>
    
        <set field="paramsToValidate[]" value="workEffortId"/>
        <set field="paramsToValidate[]" value="noteInfo"/>
        <call-simple-method method-name="validateParameters" xml-resource="component://lazyplanner/script/com/lp/project/events/CommonHelper.xml"/>

        <set field="createWorkEffortNoteMap.workEffortId" from-field="parameters.workEffortId"/>
        <set field="createWorkEffortNoteMap.noteInfo" from-field="parameters.noteInfo"/>
        <call-service service-name="createWorkEffortNote" in-map-name="createWorkEffortNoteMap"/>
        <check-errors/>
    
        <set field="success" value="true"/>
        <field-to-request field="success"/>
    </simple-method>
 
    <simple-method method-name="createStory" short-description="Create story">
        <set field="paramsToValidate[]" value="workEffortName"/>
        <set field="paramsToValidate[]" value="workEffortParentId"/>
        <set field="paramsToValidate[]" value="currentStatusId"/>
        <set field="paramsToValidate[]" value="workEffortPurposeTypeId"/>
        <set field="paramsToValidate[]" value="showAsEnumId"/>
        <set field="paramsToValidate[]" value="priority"/>
        <set field="paramsToValidate[]" value="currentPartyId"/>
        
        <!-- TOODO check party is prohject member -->
        
        <call-simple-method method-name="validateParameters" xml-resource="component://lazyplanner/script/com/lp/project/events/CommonHelper.xml"/>
        <set-service-fields service-name="createWorkEffort" to-map="createWorkEffortMap" map="parameters"/>
        <session-to-field field="currentProjectId"/>
        <set field="createWorkEffortMap.workEffortTypeId" value="STORY"/>
        <set field="createWorkEffortMap.projectId" from-field="currentProjectId"/>
        <call-service service-name="createWorkEffort" in-map-name="createWorkEffortMap">
            <result-to-field result-name="workEffortId"/>
        </call-service>            
        <check-errors/>
    
        <set field="assignPartyToWorkEffortMap.workEffortId" from-field="workEffortId"/>
        <set field="assignPartyToWorkEffortMap.partyId" from-field="parameters.currentPartyId"/>
        <set field="assignPartyToWorkEffortMap.roleTypeId" value="STORY_OWNER"/>
        <set field="assignPartyToWorkEffortMap.statusId" value="PRJ_ACTIVE"/>            
        <call-service service-name="assignPartyToWorkEffort" in-map-name="assignPartyToWorkEffortMap"/>
        <check-errors/>

        <set field="success" value="true"/>
        <field-to-request field="success"/>
    </simple-method>

    <simple-method method-name="updateStory" short-description="Update a story">
        <set field="paramsToValidate[]" value="workEffortId"/>
        <set field="paramsToValidate[]" value="workEffortName"/>
        <set field="paramsToValidate[]" value="workEffortParentId"/>
        <set field="paramsToValidate[]" value="currentStatusId"/>
        <set field="paramsToValidate[]" value="workEffortPurposeTypeId"/>
        <set field="paramsToValidate[]" value="showAsEnumId"/>
        <set field="paramsToValidate[]" value="priority"/>
        <set field="paramsToValidate[]" value="currentPartyId"/>
        
        <call-simple-method method-name="validateParameters" xml-resource="component://lazyplanner/script/com/lp/project/events/CommonHelper.xml"/>
        <call-simple-method method-name="checkStoryBelongToProject"/>
        <!-- TOODO check party is project member -->
    
        <entity-one value-field="oldWorkEffort" entity-name="WorkEffort"/>
        <set-service-fields service-name="updateWorkEffort" to-map="updateWorkEffortMap" map="parameters"/>
        <set field="createWorkEffortMap.workEffortTypeId" value="STORY"/>
        <set field="createWorkEffortMap.projectId" from-field="currentProjectId"/>
        <call-service service-name="updateWorkEffort" in-map-name="updateWorkEffortMap"/>
        <check-errors/>
    
        <if-compare-field operator="not-equals" field="oldWorkEffort.currentPartyId" to-field="parameters.currentPartyId">
            <entity-and list="workEffortPartyAssignments" entity-name="WorkEffortPartyAssignment" filter-by-date="true">
                <field-map field-name="workEffortId" from-field="parameters.workEffortId"/>
                <field-map field-name="roleTypeId" value="STORY_OWNER"/>
                <field-map field-name="partyId" from-field="oldWorkEffort.currentPartyId"/>
            </entity-and>
            <first-from-list entry="workEffortPartyAssignment" list="workEffortPartyAssignments"/>
            <!-- expire the old one and create new assigment -->
            <now-timestamp field="workEffortPartyAssignment.thruDate"/>
            <store-value value-field="workEffortPartyAssignment"/>
            
            <set field="assignPartyToWorkEffortMap.workEffortId" from-field="parameters.workEffortId"/>
            <set field="assignPartyToWorkEffortMap.partyId" from-field="parameters.currentPartyId"/>
            <set field="assignPartyToWorkEffortMap.roleTypeId" value="STORY_OWNER"/>
            <set field="assignPartyToWorkEffortMap.statusId" value="PRJ_ACTIVE"/>            
            <call-service service-name="assignPartyToWorkEffort" in-map-name="assignPartyToWorkEffortMap"/>
            <check-errors/>
        </if-compare-field>
        
        <set field="success" value="true"/>
        <field-to-request field="success"/>
    </simple-method>
 
    <simple-method method-name="createSprint" short-description="Create sprint">
        <session-to-field field="currentProjectId"/>
        <set-service-fields service-name="createWorkEffort" to-map="createWorkEffortMap" map="parameters"/>
        <set field="createWorkEffortMap.workEffortTypeId" value="SPRINT"/>
        <set field="createWorkEffortMap.currentStatusId" value="STORY_CREATED"/>        
        <set field="createWorkEffortMap.projectId" from-field="currentProjectId"/>
        <call-service service-name="createWorkEffort" in-map-name="createWorkEffortMap">
            <result-to-field result-name="workEffortId"/>
        </call-service>            
        <check-errors/>
         
        <set field="success" value="true"/>
        <field-to-request field="success"/>
    </simple-method>

    <simple-method method-name="updateSprint" short-description="Update a sprint">
        <call-simple-method method-name="checkSprintBelongToProject"/>
    
        <set-service-fields service-name="updateWorkEffort" to-map="updateWorkEffortMap" map="parameters"/>
        <set field="createWorkEffortMap.workEffortTypeId" value="SPRINT"/>
        <set field="createWorkEffortMap.currentStatusId" value="STORY_CREATED"/>                
        <set field="createWorkEffortMap.projectId" from-field="currentProjectId"/>
        <call-service service-name="updateWorkEffort" in-map-name="updateWorkEffortMap"/>
        <check-errors/>
     
        <set field="success" value="true"/>
        <field-to-request field="success"/>
    </simple-method>
    
    <simple-method method-name="checkSprintBelongToProject" short-description="Checks whether sprint workEffortId belonds to the current project">
        <session-to-field field="currentProjectId"/>
        <set field="workEffortId" from-field="parameters.workEffortId"/>
        <set field="WEType" value="SPRINT"/>
        <call-simple-method method-name="findWEOfProject" xml-resource="component://lazyplanner/script/com/lp/project/events/CommonHelper.xml"/>
        <if-empty field="projectStory">
            <log level="always" message="Story doesn't belong to a project: [${workEffortId}]"/>
            <add-error><fail-message message="Wrong story or project"/></add-error>
            <check-errors/>            
        </if-empty>
    </simple-method>
        
    <simple-method method-name="checkStoryBelongToProject" short-description="Checks whether story workEffortId belonds to the current project">
        <session-to-field field="currentProjectId"/>
        <set field="workEffortId" from-field="parameters.workEffortId"/>
        <set field="WEType" value="STORY"/>
        <call-simple-method method-name="findWEOfProject" xml-resource="component://lazyplanner/script/com/lp/project/events/CommonHelper.xml"/>
        <if-empty field="projectStory">
            <log level="always" message="Story doesn't belong to a project: [${workEffortId}]"/>
            <add-error><fail-message message="Wrong story or project"/></add-error>
            <check-errors/>            
        </if-empty>
    </simple-method>
    
    <simple-method method-name="checkProjectIsSprint" short-description="If project selected, remove sprintId">
        <if-compare-field operator="equals" field="parameters.sprintId" to-field="currentProjectId">
            <clear-field field="parameters.sprintId"/><!-- Project, not a sprint selected -->
        </if-compare-field>
    </simple-method>
           
</simple-methods>
